<?xml version="1.0"?>

<launch>
  <arg name="name" default="quadrotor"/>
  <arg name="model" default="$(find drone_description)/urdf/italdron_evo4hse.urdf.xacro"/>
  <arg name="controllers" default="
    controller/position
    controller/velocity
    controller/attitude
    "/>
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>

  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.0"/>
  <arg name="roll"  default="0" />
  <arg name="pitch" default="0" />
  <arg name="yaw"   default="0" />

  <arg name="world_frame" default="world"/> <!-- This should actually be "/world". See https://github.com/ros-simulation/gazebo_ros_pkgs/pull/324 -->
  <arg name="base_link_frame" default="$(arg tf_prefix)/base_link"/>

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(arg model)' base_link_frame:=$(arg base_link_frame) world_frame:=$(arg world_frame)" />
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)"/> <!-- required for hector_pose_estimation and message_to_tf -->
  <param name="base_link_frame" type="string" value="$(arg base_link_frame)" />
  <param name="base_stabilized_frame" type="string" value="$(arg tf_prefix)/base_stabilized" />
  <param name="base_footprint_frame" type="string" value="$(arg tf_prefix)/base_footprint" />
  <param name="world_frame" type="string" value="$(arg world_frame)" />

  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- publish state and tf -->
  <node name="message_to_tf" pkg="drone_gazebo" type="message_to_tf" output="screen">
    <param name="odometry_topic" value="/odom" /> <!-- /ground_truth/state -->
    <param name="publish_roll_pitch" value="true"/>
    <param name="frame_id" value="world" />
    <param name="footprint_frame_id" value="base_footprint" />
    <!--<param name="position_frame_id" value="" />-->
    <param name="stabilized_frame_id" value="base_stabilized" />
    <param name="child_frame_id" value="base_link" />

    <param name="tf_prefix" value="$(arg tf_prefix)" />
  </node>

  <!-- load controllers -->
  <include file="$(find hector_quadrotor_controllers)/launch/controller.launch">
    <arg name="controllers" value="$(arg controllers)"/>
  </include>

  <!-- load aerodynamic and motor parameters -->
  <arg name="motors" default="robbe_2827-34_epp1045" />
  <rosparam command="load" file="$(find hector_quadrotor_model)/param/quadrotor_aerodynamics.yaml" />
  <rosparam command="load" file="$(find hector_quadrotor_model)/param/$(arg motors).yaml" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description
           -urdf
           -x $(arg x)
           -y $(arg y)
           -z $(arg z)
           -R $(arg roll)
           -P $(arg pitch)
           -Y $(arg yaw)
           -model $(arg name)"
        respawn="false" output="screen"/>

</launch>
