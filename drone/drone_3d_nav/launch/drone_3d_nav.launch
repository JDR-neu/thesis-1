<?xml version="1.0"?>

<launch>

  <rosparam command="load" file="$(find particle_filter)/params/config.yaml" />

  <arg name="height" default="2"/>

  <!-- Launch the gazebo simulator -->
  <!-- Make the world name a parameter to load from terminal -->
  <arg name="world" default="$(find drone_gazebo)/worlds/warehouse.world"/>
  <arg name="gui" default="false"/>
  <arg name="verbose" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="debug" default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="world_name" value="$(arg world)"/>
  </include>

  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find drone_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find drone_description)/urdf/italdron_evo4hse.urdf"/>
    <arg name="controllers" value="
        controller/attitude
        controller/velocity
        "/>
  </include>

  <!-- Load a map in rviz -->
  <arg name="map" default="$(find drone_gazebo)/maps/dummy.ot"/> <!-- /maps/warehouse.ot"/> -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen" args="$(arg map)">
    <param name="frame_id" value="map" />
  </node>

  <!-- SENSORS -->
  <!-- Convert the teraranger tower ranges from 8 topics to 1 -->
  <node pkg="teraranger_array_converter" type="gazebo_to_range_array.py" name="gazebo_to_range_array" output="screen" />

  <!-- Convert from /ranges to /scan, in LaserScan message type, to be easily handled by amcl -->
  <node pkg="teraranger_array_converter" type="teraranger_array_converter.py" name="teraranger_array_converter" output="screen">
    <param name="converter_mode" value="laser_scan"/>
    <param name="sensor_mask" value="[true,true,true,true,true,true,true,true]"/>
    <!--<param name="conversion_frame" value="base"/>-->
    <param name="force_tf_refresh" value="False"/>
  </node>

  <!-- The pr2 controller for quadrotor -->
  <node name="teleop" pkg="drone_gazebo" type="teleop" output="screen"/>

  <!-- Particle filter node - AMCL for octomap -->
  <node pkg="particle_filter" name="particle_filter" type="particle_filter" output="screen"/>

  <!-- NODES -->

  <!-- Control drone height-->
  <node pkg="drone_gazebo" type="control" name="control" args="$(arg height)"/>
  <!-- Height estimation node -->
  <node name="estimator" type="estimator" pkg="drone_gazebo" />

  <!-- Provide odometry from cmd_vel topic -->
  <node name="vel_to_odom" type="vel_to_odom" pkg="drone_gazebo" output="screen"/>


  <!-- VISUALIZATION -->
  <!-- Launch Rviz with pre loaded configuration-->
   <node name="rviz" type="rviz" pkg="rviz" args="-d $(find drone_3d_nav)/navigation.rviz" />

</launch>
